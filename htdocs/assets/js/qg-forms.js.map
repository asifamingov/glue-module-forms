{"version":3,"sources":["form-validation.js","generate-id.js","html5.constraintValidationAPI.js","jquery.simplyCountable.js","relevance.js","file-size-validation.js","form-validation-xor.js","initialise-forms.js","jquery.forms.required.js","qg-date.js","word-count-validation.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrcpxpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxhxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"qg-forms.js","sourcesContent":["/*! Form validation - v1.1.1 - 2014-04-09\r\n* https://github.com/bboyle/form-validation\r\n* Copyright (c) 2014 Ben Boyle; Licensed MIT */\r\n(function( $ ) {\r\n\t'use strict';\r\n\r\n\r\n\tvar SUBMIT_TOLERANCE = 10000, // milliseconds\r\n\r\n\tDEFAULT_STATUS_HTML = '<div class=\"status warn\"><div class=\"inner\"><h2>Please check your answers</h2><ol></ol></div></div>',\r\n\r\n\t// fields that validate\r\n\tcandidateForValidation = 'input, select, textarea',\r\n\r\n\r\n\t// invalidFilter\r\n\tinvalidFilter = function() {\r\n\t\treturn ! ( this.disabled || this.validity.valid );\r\n\t},\r\n\r\n\r\n\t// follow plugin conventions for storing plugin data\r\n\t// http://docs.jquery.com/Plugins/Authoring#Data\r\n\tpluginDataKey = 'formValidation',\r\n\tpluginData = function( key, value ) {\r\n\t\tvar dataHash = this.data( pluginDataKey ) || this.data( pluginDataKey, {}).data( pluginDataKey );\r\n\r\n\t\tif ( typeof key !== 'undefined' ) {\r\n\t\t\tif ( typeof value !== 'undefined' ) {\r\n\t\t\t\tdataHash[ key ] = value;\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( typeof dataHash[ key ] !== 'undefined' ) {\r\n\t\t\t\treturn dataHash[ key ];\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn dataHash;\r\n\t},\r\n\r\n\r\n\t// helper for .label, .hint and .alert\r\n\tgetLabelComponent = function( component, options ) {\r\n\t\treturn this.map(function( index, domElement ) {\r\n\r\n\t\t\tvar $element = $( domElement ),\r\n\t\t\t\tlabelElement = null,\r\n\t\t\t\tfoundElement = null;\r\n\r\n\t\t\tif ( typeof options === 'object' && options.level === 'group' ) {\r\n\t\t\t\tfoundElement = $element.formValidation( 'group' ).find( component )[ 0 ];\r\n\r\n\t\t\t} else if ( $element.is( ':radio, :checkbox' )) {\r\n\t\t\t\tfoundElement = $element.closest( 'fieldset' ).find( component )[ 0 ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tlabelElement = $element.closest( 'form' ).find( 'label[for=\"' + domElement.id + '\"]' );\r\n\t\t\t\tfoundElement = labelElement.children( component )[ 0 ];\r\n\t\t\t\tif ( ! foundElement ) {\r\n\t\t\t\t\tif ( component === '.hint' ) {\r\n\t\t\t\t\t\tlabelElement.append( '<small class=\"hint\"></small>' );\r\n\t\t\t\t\t\tfoundElement = labelElement.children( component )[ 0 ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn foundElement;\r\n\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tchangeValidityCheck = function() {\r\n\r\n\t\tvar $this = $( this ),\r\n\t\t\talertElement = $this.formValidation( 'alert' ),\r\n\t\t\talertLevel,\r\n\t\t\tinvalidContainers\r\n\t\t;\r\n\r\n\t\t// is this control valid?\r\n\t\tif ( this.validity.valid ) {\r\n\r\n\t\t\t// is it part of a group that contain other invalid controls?\r\n\t\t\tif ( $this.formValidation( 'question' ).find( '.alert' ).filter( alertElement ).length > 0 ) {\r\n\t\t\t\talertElement.remove();\r\n\t\t\t} else {\r\n\t\t\t\t// update message from first invalid field in group\r\n\t\t\t\tinvalidContainers = $this.formValidation( 'group' ).find( candidateForValidation ).filter( invalidFilter );\r\n\t\t\t\tif ( invalidContainers.length > 0 ) {\r\n\t\t\t\t\talertElement.text( invalidContainers.formValidation( 'getValidationMessage' ));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// all fields valid\r\n\t\t\t\t\talertElement.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// remove invalid class from ancestors that do not contain invalid fields\r\n\t\t\t$this.parentsUntil( 'form', '.invalid' ).filter(function() {\r\n\t\t\t\treturn $( this ).find( candidateForValidation ).filter( invalidFilter ).length === 0;\r\n\t\t\t})\r\n\t\t\t\t// remove .invalid class\r\n\t\t\t\t.removeClass( 'invalid' )\r\n\t\t\t\t// remove old alerts (change handler should have already done this)\r\n\t\t\t\t.find( '.alert' ).remove()\r\n\t\t\t;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// does alert exist?\r\n\t\t\tif ( alertElement.length === 0 ) {\r\n\t\t\t\talertElement = $( '<em class=\"alert\"/>' );\r\n\t\t\t}\r\n\r\n\t\t\t// show message\r\n\t\t\talertElement.text( $this.formValidation( 'getValidationMessage' ));\r\n\t\t\t// append to form\r\n\t\t\tif ( $this.formValidation( 'group' ).hasClass( 'atomic' )) {\r\n\t\t\t\talertLevel = { 'level' : 'group' };\r\n\t\t\t}\r\n\r\n\t\t\t$this.formValidation( 'label', alertLevel ).parent().find( '.label, abbr[title=\"(required)\"]' ).eq( -1 ).after( alertElement );\r\n\r\n\t\t\t// NOTE we don't flag the question as .invalid now\r\n\t\t\t// .invalid only happens on submit, to soften inline validation errors\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// checks for invalid elements\r\n\t// returns number of invalid elements\r\n\tsubmitValidityCheck = function() {\r\n\r\n\t\t// form object\r\n\t\tvar form = $( this ).closest( 'form' ),\r\n\r\n\t\t\t// invalid fields\r\n\t\t\tinvalid = form.find( candidateForValidation ).filter(function invalidFields() {\r\n\r\n\t\t\t\t// skip disabled\r\n\t\t\t\tif ( this.disabled ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// only check radio button groups once (skip individual radio button)\r\n\t\t\t\tif ( this.type === 'radio' ) {\r\n\t\t\t\t\tif ( ! invalidFields.cache ) {\r\n\t\t\t\t\t\tinvalidFields.cache = {};\r\n\r\n\t\t\t\t\t} else if ( invalidFields.cache[ this.name ] === true ) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinvalidFields.cache[ this.name ] = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.validity && ! this.validity.valid;\r\n\t\t\t}),\r\n\r\n\t\t\t// alert container\r\n\t\t\talert = pluginData.call( form, 'summaryElement' ) || pluginData.call( form, 'summaryElement', $( DEFAULT_STATUS_HTML )),\r\n\r\n\t\t\t// messages within alert\r\n\t\t\tmessages = alert.find( 'ol' ),\r\n\r\n\t\t\t// track groups\r\n\t\t\tlastGroupSeen = true\r\n\t\t;\r\n\r\n\t\tif ( invalid.length > 0 ) {\r\n\r\n\t\t\t// remove old messages\r\n\t\t\tmessages.find( 'li' ).remove();\r\n\r\n\t\t\t// add new messages\r\n\t\t\tinvalid.each(function() {\r\n\r\n\t\t\t\t// get field\r\n\t\t\t\tvar $this = $( this ),\r\n\t\t\t\t\t// get group (if exists)\r\n\t\t\t\t\tgroup = $this.formValidation( 'group' ),\r\n\t\t\t\t\t// get label or group label\r\n\t\t\t\t\tlabel = $this.formValidation( 'label', {\r\n\t\t\t\t\t\tlevel : group.length > 0 ? 'group' : null\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tlabelId,\r\n\t\t\t\t\titem\r\n\t\t\t\t;\r\n\r\n\t\t\t\t// get the label id\r\n\t\t\t\tif ( label.length > 0 ) {\r\n\t\t\t\t\tlabelId = label[ 0 ].id || label.generateId( 'label-' + this.id )[ 0 ].id;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlabelId = this.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get alert item\r\n\t\t\t\titem = pluginData.call( $this, 'summaryElement' ) || pluginData.call( $this, 'summaryElement', $( '<li><a href=\"#' + labelId + '\"></a></li>' ));\r\n\r\n\t\t\t\tif ( group.length === 0 || group[ 0 ] !== lastGroupSeen ) {\r\n\r\n\t\t\t\t\t// update last group seen\r\n\t\t\t\t\tlastGroupSeen = group[ 0 ];\r\n\r\n\t\t\t\t\t// create error message with link to label\r\n\t\t\t\t\titem\r\n\t\t\t\t\t\t.find( 'a' )\r\n\t\t\t\t\t\t\t.text( label.text().replace( /\\?$/, '' ) + ': ' + $this.formValidation( 'getValidationMessage' ))\r\n\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.appendTo( messages )\r\n\t\t\t\t\t;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// remove from DOM\r\n\t\t\t\t\titem.remove();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn invalid.length;\r\n\t},\r\n\r\n\r\n\tsubmitValidationHandler = function( event ) {\r\n\t\t// validate form\r\n\t\tvar count = submitValidityCheck.call( this ),\r\n\t\t\tform = $( this );\r\n\r\n\t\t// remove invalid class from questions that do not contain invalid fields\r\n\t\tform.find( '.invalid' ).filter(function() {\r\n\t\t\treturn $( this ).find( candidateForValidation ).filter( invalidFilter ).length === 0;\r\n\t\t})\r\n\t\t\t// remove .invalid class\r\n\t\t\t.removeClass( 'invalid' )\r\n\t\t\t// remove old alerts (change handler should have already done this)\r\n\t\t\t.find( '.alert' ).remove()\r\n\t\t;\r\n\r\n\r\n\t\t// anything invalid?\r\n\t\tif ( count > 0 ) {\r\n\t\t\t// cancel submit\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\t// show the error summary\r\n\t\t\t(function( form ) {\r\n\t\t\t\tvar summary = pluginData.call( form, 'summaryElement' );\r\n\t\t\t\t// hide any previous status blocks\r\n\t\t\t\tform.prev( '.status' ).not( summary ).remove();\r\n\t\t\t\t// show the new summary\r\n\t\t\t\tform.before( summary.fadeIn() );\r\n\t\t\t\t// focus/scroll summary element\r\n\t\t\t\t$( window ).scrollTop( summary.offset().top );\r\n\t\t\t}( form ));\r\n\r\n\t\t\t// find all the invalid fields\r\n\t\t\tform.find( candidateForValidation ).filter( invalidFilter ).each(function() {\r\n\t\t\t\t// update inline alerts\r\n\t\t\t\tchangeValidityCheck.call( this );\r\n\t\t\t})\r\n\t\t\t\t// set .invalid on ancestor LI elements\r\n\t\t\t\t.parentsUntil( 'form', '.questions > li' )\r\n\t\t\t\t// but not sections\r\n\t\t\t\t.not( '.section, .compact' )\r\n\t\t\t\t.addClass( 'invalid' )\r\n\t\t\t;\r\n\r\n\t\t\t// trigger x-invalid\r\n\t\t\tform.trigger( 'x-invalid' );\r\n\r\n\t\t\t// cancel submit\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// bind this AFTER the validation handler\r\n\t// only invoked if validation did not prevent submit\r\n\tsubmitDoneHandler = function( event ) {\r\n\t\t\t// use event.timeStamp when available and $.now() otherwise\r\n\t\tvar timeStamp = event.timeStamp || $.now(),\r\n\t\t\tform = $( this ),\r\n\t\t\tsummaryElement = pluginData.call( form, 'summaryElement' ),\r\n\t\t\tlastSubmitTimeStamp\r\n\t\t;\r\n\r\n\t\t// remove summary element from DOM on successful submit\r\n\t\tif ( summaryElement ) {\r\n\t\t\tsummaryElement.remove();\r\n\t\t}\r\n\r\n\t\t// is this submit event too soon after the last one?\r\n\t\tlastSubmitTimeStamp = pluginData.call( form, 'lastSubmitTimeStamp' );\r\n\t\tif ( lastSubmitTimeStamp && timeStamp - lastSubmitTimeStamp < SUBMIT_TOLERANCE ) {\r\n\t\t\t// cancel the submit event\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\t// store the timestamp\r\n\t\t\tpluginData.call( form, 'lastSubmitTimeStamp', timeStamp );\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// plugin methods\r\n\tmethods = {\r\n\r\n\t\t// $( x ).formValidation( 'alert' ) -- get\r\n\t\t// get alert text\r\n\t\talert : function() {\r\n\t\t\treturn this.map(function( index, domElement ) {\r\n\r\n\t\t\t\tvar $element = $( domElement ),\r\n\t\t\t\t\tgroup;\r\n\r\n\t\t\t\tif ( $element.is( ':radio, :checkbox' ) === true ) {\r\n\t\t\t\t\treturn $element.closest( 'fieldset' ).find( 'legend > .alert' )[ 0 ];\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// atomic groups\r\n\t\t\t\t\tgroup = $element.formValidation( 'group' ).filter( '.atomic' );\r\n\t\t\t\t\tif ( group.length > 0 ) {\r\n\t\t\t\t\t\treturn group.find( 'legend > .alert' )[ 0 ];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn $( 'label[for=\"' + domElement.id + '\"] > .alert' )[ 0 ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'label' )\r\n\t\t// $( x ).formValidation( 'label', { level : group })\r\n\t\t// return .label associated with element or containing group\r\n\t\tlabel : function( options ) {\r\n\t\t\treturn getLabelComponent.call( this, '.label', options );\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'hint' )\r\n\t\t// $( x ).formValidation( 'hint', { level : group })\r\n\t\t// return .hint associated with element or containing group\r\n\t\thint : function( options ) {\r\n\t\t\treturn getLabelComponent.call( this, '.hint', options );\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'question' )\r\n\t\t// return question element for item\r\n\t\tquestion : function( options ) {\r\n\t\t\t// looking for group?\r\n\t\t\tif ( typeof options === 'object' && options.level === 'group' ) {\r\n\t\t\t\t// return the group\r\n\t\t\t\treturn this.formValidation( 'group' );\r\n\t\t\t}\r\n\r\n\t\t\t// not looking for group\r\n\t\t\treturn this.map(function( index, domElement ) {\r\n\t\t\t\treturn $( domElement ).parentsUntil( 'form', '.questions > li' )[ 0 ];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'group' )\r\n\t\t// return group element for item\r\n\t\tgroup : function() {\r\n\t\t\treturn this.map(function( index, domElement ) {\r\n\t\t\t\treturn $( domElement ).parentsUntil( 'form', '.group' ).filter(function() {\r\n\t\t\t\t\t// ignore groups that do not contain fieldsets\r\n\t\t\t\t\treturn $( this ).children( 'fieldset' ).length > 0;\r\n\t\t\t\t})[ 0 ];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'validate' )\r\n\t\t// binds validation handler functions\r\n\t\t// sets @novalidate on form to disable built-in validation\r\n\t\t// TODO allow this to be called multiple times without binding additional handlers!\r\n\t\tvalidate : function() {\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\t$( this ).closest( 'form' )\r\n\t\t\t\t\t// turn off native validation\r\n\t\t\t\t\t.attr( 'novalidate', true )\r\n\t\t\t\t\t// unbind and rebind handlers\r\n\t\t\t\t\t.unbind( 'submit', submitDoneHandler )\r\n\t\t\t\t\t.unbind( 'submit', submitValidationHandler )\r\n\t\t\t\t\t// validate this form\r\n\t\t\t\t\t.bind( 'submit', submitValidationHandler )\r\n\t\t\t\t\t// if validation did not cancel submit…\r\n\t\t\t\t\t.bind( 'submit', submitDoneHandler )\r\n\t\t\t\t\t// bind inline validation handlers to form elements\r\n\t\t\t\t\t.find( candidateForValidation )\r\n\t\t\t\t\t\t.unbind( 'change', changeValidityCheck )\r\n\t\t\t\t\t\t.bind( 'change', changeValidityCheck )\r\n\t\t\t\t;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t// $( x ).formValidation( 'getValidationMessage' )\r\n\t\t// return String validation message, e.g. \"Must be completed\"\r\n\t\tgetValidationMessage : function() {\r\n\r\n\t\t\tvar validityState = this[ 0 ].validity;\r\n\r\n\t\t\tif ( typeof validityState === 'undefined' || validityState.valid === true ) {\r\n\t\t\t\treturn '';\r\n\r\n\t\t\t} else if ( validityState.valueMissing ) {\r\n\t\t\t\treturn 'Must be completed';\r\n\r\n\t\t\t} else if ( validityState.customError ) {\r\n\t\t\t\treturn this[ 0 ].validationMessage;\r\n\r\n\t\t\t} else if ( validityState.typeMismatch ) {\r\n\t\t\t\treturn 'Must be an email address';\r\n\r\n\t\t\t} else if ( validityState.patternMismatch ) {\r\n\t\t\t\treturn 'Must use the format shown';\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn 'Must be a valid answer';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\t$.fn.formValidation = function( method ) {\r\n\r\n\t\t// Method calling logic\r\n\t\t// http://docs.jquery.com/Plugins/Authoring#Plugin_Methods\r\n\t\tif ( methods[method] ) {\r\n\t\t\treturn methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));\r\n\t\t} else if ( typeof method === 'object' || ! method ) {\r\n\t\t\treturn methods.init.apply( this, arguments );\r\n\t\t} else {\r\n\t\t\t$.error( 'Method ' +  method + ' does not exist on jQuery.formValidation' );\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\t// legacy API\r\n\t$.fn.forcesForms = $.fn.formValidation;\r\n\r\n\r\n}( jQuery ));\r\n","/*! Generate ID - v1.0.3 - 2014-09-18\r\n* https://github.com/bboyle/Generate-ID\r\n* Copyright (c) 2014 Ben Boyle; Licensed MIT */\r\n(function( $ ) {\r\n\t'use strict';\r\n\r\n\r\n\t/**\r\n\t * Assigns a unique value to `@id` unless hasAttribute( 'id' ) is true\r\n\t *\r\n\t * @param preferredId string to use for id value\r\n\t * \r\n\t * @return jquery object (chaining supported)\r\n\t */\r\n\t$.fn.generateId = function( preferredId ) {\r\n\r\n\t\tvar i = 1;\r\n\r\n\t\tif ( ! preferredId ) {\r\n\t\t\tpreferredId = 'id';\r\n\t\t} else {\r\n\t\t\tpreferredId = $.trim( preferredId.toLowerCase().replace( /[^a-z0-9_]+/g, ' ' )).replace( /\\s+/g, '-' );\r\n\t\t}\r\n\r\n\t\treturn this.each(function() {\r\n\r\n\t\t\tvar id;\r\n\r\n\t\t\tif ( ! this.getAttribute( 'id' )) {\r\n\r\n\t\t\t\tid = preferredId;\r\n\t\t\t\twhile ( document.getElementById( id )) {\r\n\t\t\t\t\tid = preferredId + String( i );\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.setAttribute( 'id', id );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n}( jQuery ));\r\n","/*! HTML5 constraintValidationAPI - v1.0.7 - 2015-02-19\r\n* https://github.com/bboyle/html5-constraint-validation-API\r\n* Copyright (c) 2015 Ben Boyle; Licensed MIT */\r\n/*exported initConstraintValidationAPI*/\r\nif ( jQuery !== 'undefined' ) {\r\n\t(function( $ ) {\r\n\t\t'use strict';\r\n\r\n\r\n\t\t// http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\r\n\t\t// 1*( atext / \".\" ) \"@\" ldh-str 1*( \".\" ldh-str )\r\n\t\tvar REXP_EMAIL = /^[A-Za-z0-9!#$%&'*+\\-\\/=\\?\\^_`\\{\\|\\}~\\.]+@[A-Za-z0-9\\-]+(\\.[A-Za-z0-9\\-]+)*$/,\r\n\r\n\t\t\t// fields that validate\r\n\t\t\tcandidateForValidation = 'input, select, textarea',\r\n\r\n\t\t\t// for feature detection\r\n\t\t\tinput = $( '<input>' ).get( 0 ),\r\n\r\n\t\t\t// polyfill test\r\n\t\t\tpolyfill = typeof input.validity !== 'object',\r\n\r\n\t\t\t// radio button bug (google earth internal browser)\r\n\t\t\tradioButtonBug = ! polyfill && $( '<input type=\"radio\" required checked>' ).get( 0 ).validity.valueMissing === true,\r\n\t\t\tvalidateBuggyRadioButtons,\r\n\r\n\t\t\t// invalid fields filter\r\n\t\t\tisInvalid = function() {\r\n\t\t\t\treturn ! ( this.disabled || this.validity.valid );\r\n\t\t\t},\r\n\r\n\t\t\t// get all radio buttons\r\n\t\t\tgetRadioButtonsInGroup = function( radio ) {\r\n\t\t\t\treturn $( radio.form.elements[ radio.name ] ).filter( '[name=\"' + radio.name + '\"]' );\r\n\t\t\t},\r\n\r\n\r\n\t\t\t// manage validity state object\r\n\t\t\tvalidityState = function( typeMismatch, valueMissing, customError, message, patternMismatch ) {\r\n\r\n\t\t\t\tif ( typeof message === 'string' ) {\r\n\t\t\t\t\tcustomError = !! message;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcustomError: customError,\r\n\t\t\t\t\ttypeMismatch: !! typeMismatch,\r\n\t\t\t\t\tpatternMismatch: !! patternMismatch,\r\n\t\t\t\t\tvalueMissing: !! valueMissing,\r\n\t\t\t\t\tvalid: ! valueMissing && ! customError && ! typeMismatch && ! patternMismatch\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\r\n\t\t\tvalidateField = function( message ) {\r\n\r\n\t\t\t\tvar $this = $( this ),\r\n\t\t\t\t\trequired = !! $this.attr( 'required' ),\r\n\t\t\t\t\tradio = this.type === 'radio' && getRadioButtonsInGroup( this ),\r\n\t\t\t\t\tvalueMissing,\r\n\t\t\t\t\tinvalidEmail = this.getAttribute( 'type' ) === 'email' && !! this.value && ! REXP_EMAIL.test( this.value ),\r\n\t\t\t\t\tpatternMismatch,\r\n\t\t\t\t\tpattern,\r\n\t\t\t\t\tnewValidityState\r\n\t\t\t\t;\r\n\r\n\t\t\t\t// radio buttons are required if any single radio button is flagged as required\r\n\t\t\t\tif ( radio && ! required ) {\r\n\t\t\t\t\trequired = radio.filter( '[required]' ).length > 0;\r\n\t\t\t\t}\r\n\t\t\t\t// if required, check for missing value\r\n\t\t\t\tif ( required ) {\r\n\r\n\t\t\t\t\tif ( /^select$/i.test( this.nodeName )) {\r\n\t\t\t\t\t\tvalueMissing = this.selectedIndex === 0 && this.options[ 0 ].value === '';\r\n\r\n\t\t\t\t\t} else if ( radio ) {\r\n\t\t\t\t\t\tvalueMissing = radio.filter( ':checked' ).length === 0;\r\n\r\n\t\t\t\t\t} else if ( this.type === 'checkbox' ) {\r\n\t\t\t\t\t\tvalueMissing = ! this.checked;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalueMissing = ! this.value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !! this.getAttribute( 'pattern' ) ) {\r\n\t\t\t\t\tif ( this.value.length > 0 ) {\r\n\t\t\t\t\t\t// http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#compiled-pattern-regular-expression\r\n\t\t\t\t\t\tpattern = new RegExp( '^(?:' + this.getAttribute( 'pattern' ) + ')$' );\r\n\r\n\t\t\t\t\t\tpatternMismatch = ! pattern.test( this.value );\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpatternMismatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set .validityState\r\n\t\t\t\tnewValidityState = validityState( invalidEmail, valueMissing, this.validity.customError || false, message, patternMismatch );\r\n\t\t\t\tif ( radio ) {\r\n\t\t\t\t\tgetRadioButtonsInGroup( this ).each(function() { this.validity = newValidityState; });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.validity = newValidityState;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set .validationMessage\r\n\t\t\t\tif ( this.validity.valid ) {\r\n\t\t\t\t\tthis.validationMessage = '';\r\n\r\n\t\t\t\t} else if ( this.validity.customError ) {\r\n\t\t\t\t\tif ( typeof message === 'string' ) {\r\n\t\t\t\t\t\tthis.validationMessage = message;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( this.validity.valueMissing ) {\r\n\t\t\t\t\tthis.validationMessage = 'Please answer this question';\r\n\r\n\t\t\t\t} else if ( this.validity.typeMismatch ) {\r\n\t\t\t\t\tthis.validationMessage = 'Please type an email address';\r\n\r\n\t\t\t\t} else if ( this.validity.patternMismatch ) {\r\n\t\t\t\t\tthis.validationMessage = 'Please use the format shown';\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.validationMessage = 'Please answer the question correctly';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.disabled || this.validity.valid;\r\n\t\t\t},\r\n\r\n\r\n\t\t\tchangeHandler = function( event ) {\r\n\t\t\t\tvar target = event.target;\r\n\r\n\t\t\t\tvalidateField.call( target );\r\n\r\n\t\t\t\tif ( target.type === 'radio' ) {\r\n\t\t\t\t\tgetRadioButtonsInGroup( target ).each(function() {\r\n\t\t\t\t\t\tthis.validity = target.validity;\r\n\t\t\t\t\t\tthis.validationMessage = target.validationMessage;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\r\n\t\t\tsubmitHandler = function( event ) {\r\n\r\n\t\t\t\tvar form = $( this ),\r\n\t\t\t\t\tnovalidate = !! form.attr( 'novalidate' ),\r\n\t\t\t\t\tinvalid = false\r\n\t\t\t\t;\r\n\r\n\t\t\t\t// polyfill validation?\r\n\t\t\t\tif ( polyfill ) {\r\n\t\t\t\t\t// check fields\r\n\t\t\t\t\tform.find( candidateForValidation ).each(function() {\r\n\r\n\t\t\t\t\t\tinvalid = ! validateField.call( this );\r\n\r\n\r\n\t\t\t\t\t\t// unless @novalidate\r\n\t\t\t\t\t\tif ( ! novalidate ) {\r\n\t\t\t\t\t\t\t// if invalid\r\n\t\t\t\t\t\t\tif ( invalid ) {\r\n\t\t\t\t\t\t\t\t// use triggerHandler because invalid does not bubble\r\n\t\t\t\t\t\t\t\t$( this ).triggerHandler( 'invalid' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// NOTE all the code below runs in all browsers to polyfill implementation bugs\r\n\r\n\t\t\t\t// required radio button check\r\n\t\t\t\tif ( radioButtonBug ) {\r\n\t\t\t\t\tvalidateBuggyRadioButtons( this );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Opera 11 on OSX fires submit event even when fields are invalid\r\n\t\t\t\t// correct implementations will not invoke this submit handler until all fields are valid\r\n\r\n\t\t\t\t// unless @novalidate\r\n\t\t\t\t// if there are invalid fields\r\n\t\t\t\tif ( ! novalidate && form.find( candidateForValidation ).filter( isInvalid ).length > 0 ) {\r\n\t\t\t\t\t// abort submit\r\n\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\r\n\t\t\tinitConstraintValidationAPI = function() {\r\n\t\t\t\tvar candidates = $( candidateForValidation );\r\n\r\n\t\t\t\t// INPUT validityState\r\n\t\t\t\tif ( polyfill ) {\r\n\t\t\t\t\t// set us up the API\r\n\t\t\t\t\tcandidates.filter(function() {\r\n\t\t\t\t\t\treturn typeof this.validity !== 'object';\r\n\t\t\t\t\t}).each(function() {\r\n\r\n\t\t\t\t\t\tthis.validity = validityState( false, false, false, '', false );\r\n\t\t\t\t\t\tthis.validationMessage = '';\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// check validity on change\r\n\t\t\t\t\tcandidates\r\n\t\t\t\t\t\t.unbind( 'change.constraintValidationAPI' )\r\n\t\t\t\t\t\t.bind( 'change.constraintValidationAPI', changeHandler )\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// INPUT validitationMessage\r\n\t\t\t\tif ( typeof input.validationMessage !== 'string' ) {\r\n\t\t\t\t\t// set us up the API\r\n\t\t\t\t\tcandidates.filter(function() {\r\n\t\t\t\t\t\treturn typeof this.validationMessage !== 'string';\r\n\t\t\t\t\t}).each(function() {\r\n\t\t\t\t\t\tthis.validationMessage = '';\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// INPUT checkValidity\r\n\t\t\t\tif ( typeof input.checkValidity !== 'function' ) {\r\n\t\t\t\t\t// set us up the API\r\n\t\t\t\t\tcandidates.filter(function() {\r\n\t\t\t\t\t\treturn typeof this.checkValidity !== 'function';\r\n\t\t\t\t\t}).each(function() {\r\n\t\t\t\t\t\tvar domElement = this;\r\n\r\n\t\t\t\t\t\tthis.checkValidity = function() {\r\n\t\t\t\t\t\t\tvar valid = validateField.call( domElement );\r\n\r\n\t\t\t\t\t\t\t// if invalid, and unless novalidate\r\n\t\t\t\t\t\t\tif ( ! valid && ! this.form.getAttribute( 'novalidate' )) {\r\n\t\t\t\t\t\t\t\t// use triggerHandler because invalid does not bubble\r\n\t\t\t\t\t\t\t\t$( domElement ).triggerHandler( 'invalid' );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn valid;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// INPUT setCustomValidity\r\n\t\t\t\tif ( typeof input.setCustomValidity !== 'function' ) {\r\n\t\t\t\t\t// set us up the API\r\n\t\t\t\t\tcandidates.filter(function() {\r\n\t\t\t\t\t\treturn typeof this.setCustomValidity !== 'function';\r\n\t\t\t\t\t}).each(function() {\r\n\t\t\t\t\t\tvar that = this;\r\n\r\n\t\t\t\t\t\tthis.setCustomValidity = function( message ) {\r\n\t\t\t\t\t\t\tvalidateField.call( that, message );\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check for required radio button bug (google earth internal browser)\r\n\t\t\t\tif ( radioButtonBug ) {\r\n\t\t \t\t\tvalidateBuggyRadioButtons = function( form ) {\r\n\t\t\t\t\t\tvar seen = {};\r\n\t\t\t\t\t\tvar radio, valueMissing;\r\n\r\n\t\t\t\t\t\t// check every required radio button\r\n\t\t\t\t\t\t$( 'input', form ).filter( ':radio' ).filter( '[required],[aria-required=\"true\"]' ).each(function() {\r\n\t\t\t\t\t\t\tif ( typeof seen[ this.name ] === 'undefined' ) {\r\n\t\t\t\t\t\t\t\tseen[ this.name ] = true;\r\n\r\n\t\t\t\t\t\t\t\tradio = getRadioButtonsInGroup( this );\r\n\t\t\t\t\t\t\t\tvalueMissing = radio.filter( ':checked' ).length === 0;\r\n\r\n\t\t\t\t\t\t\t\tif ( valueMissing ) {\r\n\t\t\t\t\t\t\t\t\t// make sure @required is set to use validation API\r\n\t\t\t\t\t\t\t\t\tradio.attr( 'required', 'required' );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// using @aria-required=true so we can track this control\r\n\t\t\t\t\t\t\t\t\t// removing @required here to bypass validation bug\r\n\t\t\t\t\t\t\t\t\tradio.attr( 'aria-required', true ).removeAttr( 'required' );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// initial validity\r\n\t\t\t\t\t$( 'form' ).each( validateBuggyRadioButtons );\r\n\r\n\t\t\t\t\t// watch changes\r\n\t\t\t\t\tif ( ! polyfill ) {\r\n\t\t\t\t\t\tcandidates.filter( ':radio' )\r\n\t\t\t\t\t\t\t.unbind( 'change.constraintValidationAPI' )\r\n\t\t\t\t\t\t\t.bind( 'change.constraintValidationAPI', function() {\r\n\t\t\t\t\t\t\t\tvalidateBuggyRadioButtons( this.form );\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check validity on submit\r\n\t\t\t\t// this should be bound before all other submit handlers bound to the same form\r\n\t\t\t\t// otherwise they will execute before this handler can cancel submit (oninvalid)\r\n\t\t\t\t$( 'form' )\r\n\t\t\t\t\t.unbind( 'submit.constraintValidationAPI' )\r\n\t\t\t\t\t.bind( 'submit.constraintValidationAPI', submitHandler )\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t;\r\n\r\n\r\n\t\t// run immediately and ondocumentready\r\n\t\tinitConstraintValidationAPI();\r\n\t\t$( initConstraintValidationAPI );\r\n\r\n\r\n\t\t// expose init function\r\n\t\twindow.initConstraintValidationAPI = initConstraintValidationAPI;\r\n\r\n\r\n\t}( jQuery ));\r\n}\r\n","/*\n* jQuery Simply Countable plugin\n* Provides a character counter for any text input or textarea\n* \n* @version  0.4.2\n* @homepage http://github.com/aaronrussell/jquery-simply-countable/\n* @author   Aaron Russell (http://www.aaronrussell.co.uk)\n*\n* Copyright (c) 2009-2010 Aaron Russell (aaron@gc4.co.uk)\n* Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n* and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.\n*/\n\n(function($){\n\n  $.fn.simplyCountable = function(options){\n    \n    options = $.extend({\n      counter:            '#counter',\n      countType:          'characters',\n      maxCount:           140,\n      strictMax:          false,\n      countDirection:     'down',\n      safeClass:          'safe',\n      overClass:          'over',\n      thousandSeparator:  ',',\n      onOverCount:        function(){},\n      onSafeCount:        function(){},\n      onMaxCount:         function(){}\n    }, options);\n\n    var navKeys = [33,34,35,36,37,38,39,40];\n\n    return $(this).each(function(){\n\n      var countable = $(this);\n      var counter = $(options.counter);\n      if (!counter.length) { return false; }\n      \n      var countCheck = function(){\n             \n        var count;\n        var revCount;\n        \n        var reverseCount = function(ct){\n          return ct - (ct*2) + options.maxCount;\n        }\n        \n        var countInt = function(){\n          return (options.countDirection === 'up') ? revCount : count;\n        }\n        \n        var numberFormat = function(ct){\n          var prefix = '';\n          if (options.thousandSeparator){\n            ct = ct.toString();          \n            // Handle large negative numbers\n            if (ct.match(/^-/)) { \n              ct = ct.substr(1);\n              prefix = '-';\n            }\n            for (var i = ct.length-3; i > 0; i -= 3){\n              ct = ct.substr(0,i) + options.thousandSeparator + ct.substr(i);\n            }\n          }\n          return prefix + ct;\n        }\n\n        var changeCountableValue = function(val){\n          countable.val(val).trigger('change');\n        }\n        \n        /* Calculates count for either words or characters */\n        if (options.countType === 'words'){\n          count = options.maxCount - $.trim(countable.val()).split(/\\s+/).length;\n          if (countable.val() === ''){ count += 1; }\n        }\n        else { count = options.maxCount - countable.val().length; }\n        revCount = reverseCount(count);\n        \n        /* If strictMax set restrict further characters */\n        if (options.strictMax && count <= 0){\n          var content = countable.val();\n          if (count < 0) {\n            options.onMaxCount(countInt(), countable, counter);\n          }\n          if (options.countType === 'words'){\n            var allowedText = content.match( new RegExp('\\\\s?(\\\\S+\\\\s+){'+ options.maxCount +'}') );\n            if (allowedText) {\n              changeCountableValue(allowedText[0]);\n            }\n          }\n          else { changeCountableValue(content.substring(0, options.maxCount)); }\n          count = 0, revCount = options.maxCount;\n        }\n        \n        counter.text(numberFormat(countInt()));\n        \n        /* Set CSS class rules and API callbacks */\n        if (!counter.hasClass(options.safeClass) && !counter.hasClass(options.overClass)){\n          if (count < 0){ counter.addClass(options.overClass); }\n          else { counter.addClass(options.safeClass); }\n        }\n        else if (count < 0 && counter.hasClass(options.safeClass)){\n          counter.removeClass(options.safeClass).addClass(options.overClass);\n          options.onOverCount(countInt(), countable, counter);\n        }\n        else if (count >= 0 && counter.hasClass(options.overClass)){\n          counter.removeClass(options.overClass).addClass(options.safeClass);\n          options.onSafeCount(countInt(), countable, counter);\n        }\n        \n      };\n      \n      countCheck();\n\n      countable.on('keyup blur paste', function(e) {\n        switch(e.type) {\n          case 'keyup':\n            // Skip navigational key presses\n            if ($.inArray(e.which, navKeys) < 0) { countCheck(); }\n            break;\n          case 'paste':\n            // Wait a few miliseconds if a paste event\n            setTimeout(countCheck, (e.type === 'paste' ? 5 : 0));\n            break;\n          default:\n            countCheck();\n            break;\n        }\n      });\n\n    });\n    \n  };\n\n})(jQuery);","/*! relevance - v2.1.0 - 2015-03-04\n* https://github.com/bboyle/relevance\n* Copyright (c) 2015 Ben Boyle; Licensed MIT */\nif ( jQuery !== 'undefined' ) {\n\t(function( $ ) {\n\t\t'use strict';\n\n\t\tvar relevantEvent = 'relevant',\n\t\t\tirrelevantEvent = 'irrelevant',\n\t\t\telementsToDisable = 'button, input, select, textarea',\n\t\t\tpolyfillHidden = (function() {\n\t\t\t\tvar hidden = $( '<div hidden></div>' );\n\t\t\t\tvar hiddenSupported = hidden.appendTo( 'body' ).is( ':hidden' );\n\t\t\t\thidden.remove();\n\t\t\t\treturn ! hiddenSupported;\n\t\t\t}()),\n\n\t\t\tformElementsByName = function( form, name ) {\n\t\t\t\t// filter out the @id matching of HTMLFormElement.elements[]\n\t\t\t\treturn $( form.elements[ name ] ).filter( '[name=\"' + name +'\"]' );\n\t\t\t},\n\n\t\t\tfilterRelevant = function() {\n\t\t\t\treturn $( this ).closest( '[hidden]' ).length === 0;\n\t\t\t},\n\n\t\t\tfilterIrrelevant = function() {\n\t\t\t\treturn $( this ).closest( '[hidden]' ).length > 0;\n\t\t\t},\n\n\t\t\tvalueMap = function( element ) {\n\t\t\t\treturn element.value;\n\t\t\t},\n\n\t\t\tvalueInArray = function( possibleValues, actualValues ) {\n\t\t\t\tvar i;\n\t\t\t\tif ( typeof possibleValues !== 'object' ) {\n\t\t\t\t\tpossibleValues = [ possibleValues ];\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < actualValues.length; i++ ) {\n\t\t\t\t\tif ( $.inArray( actualValues[ i ], possibleValues ) !== -1 ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\t// when changing a control that alters relevance of other elements…\n\t\t\trecalculateRelevance = function() {\n\t\t\t\t// assume dependency map exists\n\t\t\t\tvar map = $( this.form ).data( 'relevance' ).dependencyMap[ this.name ],\n\t\t\t\t\tvalues = $.map( formElementsByName( this.form, this.name ).filter( 'select,:checked' ).filter( ':visible' ), valueMap )\n\t\t\t\t;\n\n\t\t\t\t$.each( map, function( index, config ) {\n\t\t\t\t\tconfig.items.relevance( 'relevant', valueInArray( config.values, values ) !== config.negate );\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// when an element changes relevance, check descendent controls that alter relevance in turn…\n\t\t\trecalculateDependents = function( isRelevant ) {\n\t\t\t\tvar form, dependencyMap, targets;\n\n\t\t\t\t// any change to relevant toggles?\n\t\t\t\tform = this.closest( 'form' );\n\t\t\t\tif ( form.length ) {\n\t\t\t\t\tdependencyMap = form.data( 'relevance' );\n\t\t\t\t\tif ( typeof dependencyMap === 'object' ) {\n\t\t\t\t\t\tdependencyMap = dependencyMap.dependencyMap;\n\t\t\t\t\t\tif ( typeof dependencyMap === 'object' ) {\n\t\t\t\t\t\t\t// get descendent-or-self select, radio and checkbox\n\t\t\t\t\t\t\ttargets = this.add( this.find( 'select,input' )).filter( 'select,:radio,:checkbox' );\n\t\t\t\t\t\t\t// get unique @name for select, radio and checkbox\n\t\t\t\t\t\t\ttargets = $.unique( $.map( targets, function( elementOfArray ) {\n\t\t\t\t\t\t\t\treturn elementOfArray.name;\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t$.each( targets, function( index, name ) {\n\t\t\t\t\t\t\t\tvar map = dependencyMap[ name ],\n\t\t\t\t\t\t\t\t\tvalues;\n\n\t\t\t\t\t\t\t\tif ( typeof map === 'object' ) {\n\t\t\t\t\t\t\t\t\t$.each( map, function( index, config ) {\n\t\t\t\t\t\t\t\t\t\tif ( isRelevant === false ) {\n\t\t\t\t\t\t\t\t\t\t\tconfig.items.relevance( 'relevant', false );\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvalues = $.map( formElementsByName( form[ 0 ], name ).filter( 'select,:checked' ).filter( ':visible' ), valueMap );\n\t\t\t\t\t\t\t\t\t\t\tconfig.items.relevance( 'relevant', valueInArray( config.values, values ) !== config.negate );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\n\t\tmethods = {\n\n\t\t\t// $( x ).relevance( 'relevant', true )\n\t\t\t// if the element is hidden, fire a 'relevant' event\n\t\t\t// $( x ).relevance( 'relevant', false )\n\t\t\t// if the element is visible, fire an \"irrelevant\" event\n\t\t\trelevant: function( makeRelevant ) {\n\t\t\t\tvar targets;\n\t\t\t\tif ( makeRelevant ) {\n\t\t\t\t\ttargets = this.filter( filterIrrelevant ).trigger( relevantEvent );\n\t\t\t\t} else {\n\t\t\t\t\ttargets = this.filter( filterRelevant ).trigger( irrelevantEvent );\n\t\t\t\t}\n\t\t\t\tif ( targets.length ) {\n\t\t\t\t\trecalculateDependents.call( targets, makeRelevant );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// $( x ).relevance( 'show' )\n\t\t\t// shows the element (does not check if element is already visible)\n\t\t\t// triggers 'relevant-done' after showing is complete\n\t\t\tshow: function() {\n\n\t\t\t\t// enable elements before they are shown\n\t\t\t\tthis.add( this.find( elementsToDisable ))\n\t\t\t\t// but not any controls that will remain irrelevant\n\t\t\t\t.not( this.find( '[hidden]' ).find( elementsToDisable ))\n\t\t\t\t.each(function() {\n\t\t\t\t\tthis.removeAttribute( 'disabled' );\n\t\t\t\t});\n\n\t\t\t\t// stop animation, remove @hidden and @aria-hidden, start showing\n\t\t\t\tif ( polyfillHidden ) {\n\t\t\t\t\tthis.stop( true, true ).slideDown();\n\t\t\t\t}\n\t\t\t\treturn this.removeAttr( 'hidden' ).removeAttr( 'aria-hidden' );\n\t\t\t},\n\n\t\t\t// $( x ).relevance( 'hide' )\n\t\t\t// hides the element (does not check if element is already hidden)\n\t\t\thide: function() {\n\n\t\t\t\tthis.attr({\n\t\t\t\t\thidden: 'hidden',\n\t\t\t\t\t'aria-hidden': 'true'\n\t\t\t\t});\n\n\t\t\t\tif ( polyfillHidden ) {\n\t\t\t\t\tthis.stop( true, true ).hide( 0, function() {\n\t\t\t\t\t\tvar $this = $( this );\n\t\t\t\t\t\t// disable elements (including self if appropriate)\n\t\t\t\t\t\t$this.filter( elementsToDisable ).add( $this.find( elementsToDisable )).each(function() {\n\t\t\t\t\t\t\tthis.setAttribute( 'disabled', 'disabled' );\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.filter( elementsToDisable ).add( this.find( elementsToDisable )).each(function() {\n\t\t\t\t\t\tthis.setAttribute( 'disabled', 'disabled' );\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// $( x ).relevance( 'relevantWhen', { name: radio/checkbox/select, value: requiredValue, negate: false | true })\n\t\t\t// sets up dependent relevance\n\t\t\t// example: $( '#red' ).relevance( 'relevantWhen', { name: 'rgb', value: 'red' })\n\t\t\t// example: $( '#red' ).relevance( 'relevantWhen', { id: 'rgb-red', value: 'red' })\n\t\t\t// #red will be shown/hidden when '@name=rgb' value changes.\n\t\t\trelevantWhen: function( config ) {\n\t\t\t\tvar form, data, name, values;\n\n\t\t\t\tvalues = config.values || [ config.value ];\n\n\t\t\t\tif ( config.name ) {\n\t\t\t\t\tname = config.name;\n\t\t\t\t} else if ( config.id ) {\n\t\t\t\t\tname = document.getElementById( config.id ).name;\n\t\t\t\t} else if ( config.container ) {\n\t\t\t\t\tname = $( config.container ).find( 'select,:radio,:checkbox' ).attr( 'name' );\n\t\t\t\t}\n\t\t\t\tconfig.negate = config.negate === true;\n\n\t\t\t\t// find the form that has this control\n\t\t\t\tform = this.closest( 'form' );\n\t\t\t\t// get dependency map (create it if needed)\n\t\t\t\tdata = form.data( 'relevance' );\n\t\t\t\tif ( typeof data !== 'object' ) {\n\t\t\t\t\tdata = {};\n\t\t\t\t\tform.data( 'relevance', data );\n\t\t\t\t}\n\t\t\t\tif ( typeof data.dependencyMap !== 'object' ) {\n\t\t\t\t\tdata.dependencyMap = {};\n\t\t\t\t}\n\t\t\t\tif ( typeof data.dependencyMap[ name ] !== 'object' ) {\n\t\t\t\t\tdata.dependencyMap[ name ] = [];\n\t\t\t\t\t// setup event handlers for name\n\t\t\t\t\tformElementsByName( form[ 0 ], name )\n\t\t\t\t\t\t.filter( ':radio,:checkbox' )\n\t\t\t\t\t\t\t.bind( 'click', recalculateRelevance )\n\t\t\t\t\t\t.end()\n\t\t\t\t\t\t.filter( 'select' )\n\t\t\t\t\t\t\t.bind( 'change', recalculateRelevance )\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t// add or update relevance rule\n\t\t\t\tdata.dependencyMap[ name ].push({\n\t\t\t\t\titems: this,\n\t\t\t\t\tvalues: values,\n\t\t\t\t\tnegate: config.negate\n\t\t\t\t});\n\n\t\t\t\t// initial relevance\n\t\t\t\tthis.relevance( 'relevant', valueInArray( values, $.map( formElementsByName( form[ 0 ], name ).filter( 'select,:checked' ).filter( ':visible' ), valueMap )) !== config.negate );\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// $( x ).relevance( 'instructions', options )\n\t\t\t// sets up relevance handling based on text instructions\n\t\t\t// options ::= { instructions: '.relevance', questions: '.questions > li' }\n\t\t\tinstructions: function( options ) {\n\t\t\t\toptions = $.extend( {\n\t\t\t\t\tinstructionSelector: '.relevance',\n\t\t\t\t\tquestionSelector: '.questions > li'\n\t\t\t\t}, options );\n\n\t\t\t\tthis.find( options.instructionSelector ).each(function() {\n\t\t\t\t\tvar $this = $( this ),\n\t\t\t\t\t\tvalue = $this.text(),\n\t\t\t\t\t\tquestion = $this.closest( options.questionSelector ),\n\t\t\t\t\t\ttoggle = question.prevAll( options.questionSelector ),\n\t\t\t\t\t\ti, answers, nestedToggles,\n\t\t\t\t\t\tmatch = false,\n\t\t\t\t\t\tnegate = false\n\t\t\t\t\t;\n\n\t\t\t\t\t// pattern: (If different to <PREVIOUS QUESTION>)\n\t\t\t\t\tif ( /If different to/.test( value )) {\n\t\t\t\t\t\t// assume previous 'li' is the toggle\n\t\t\t\t\t\tmatch = true;\n\t\t\t\t\t\ttoggle = toggle.eq( 0 );\n\t\t\t\t\t\tvalue = toggle.find( ':checkbox' ).val();\n\t\t\t\t\t\tnegate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = value.replace( /^.*chose\\s+\\S([^'\"’]+)\\S\\s+above.*$/, '$1' );\n\t\t\t\t\t\t// which of the previous questions is the toggle?\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile ( i < toggle.length ) {\n\t\t\t\t\t\t\t// does this item have the answer we need?\n\t\t\t\t\t\t\tanswers = $.map( toggle.eq( i ).find( 'option,:radio,:checkbox' ), valueMap );\n\t\t\t\t\t\t\tif ( valueInArray( value, answers )) {\n\t\t\t\t\t\t\t\tnestedToggles = toggle.eq( i ).find( options.questionSelector );\n\t\t\t\t\t\t\t\tif ( nestedToggles.length ) {\n\t\t\t\t\t\t\t\t\ttoggle = $( nestedToggles.get().reverse() );\n\t\t\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmatch = true;\n\t\t\t\t\t\t\t\t\ttoggle = toggle.eq( i ); // toggle.length becomes 1, loop will exit\n\t\t\t\t\t\t\t\t\ti = 1; // exit loop\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\ttoggle = toggle.add( toggle.find( 'select,input' )).filter( 'select,:radio,:checkbox' );\n\t\t\t\t\t\tquestion.relevance( 'relevantWhen', { name: toggle.attr( 'name' ), value: value, negate: negate });\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t};\n\n\n\t\t// fallback (default) event handling\n\t\t$( document ).bind( 'relevant irrelevant', function( event ) {\n\t\t\tvar target = $( event.target );\n\t\t\tif ( event.type === 'relevant' ) {\n\t\t\t\ttarget.relevance( 'show' );\n\t\t\t} else {\n\t\t\t\ttarget.relevance( 'hide' );\n\t\t\t}\n\t\t});\n\n\n\t\t$.fn.relevance = function( method ) {\n\n\t\t\t// Method calling logic\n\t\t\t// http://docs.jquery.com/Plugins/Authoring#Plugin_Methods\n\t\t\tif ( methods[method] ) {\n\t\t\t\treturn methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));\n\t\t\t} else if ( typeof method === 'object' || ! method ) {\n\t\t\t\t// return methods.init.apply( this, arguments );\n\t\t\t\treturn this;\n\t\t\t} else {\n\t\t\t\t$.error( 'Method ' +  method + ' does not exist on jQuery.relevance' );\n\t\t\t}\n\n\t\t};\n\n\n\t}( jQuery ));\n}\n","(function( $ ) {\r\n\t'use strict';\r\n\r\n\t// window.console.log( 'file-size-validation.js' );\r\n\r\n\tvar displayFileSize;\r\n\r\n\r\n\t// bail out if no file API support\r\n\tif ( typeof $( '<input type=\"file\">' )[ 0 ].files !== 'object' ) {\r\n\t\t// duplicate fsize instruction before submit button\r\n\t\t$( '.max-fsize' ).each(function() {\r\n\t\t\tvar fsize = $( this ), form;\r\n\t\t\tform = fsize.closest( '.preamble' ).nextAll( 'form' ).eq( 0 );\r\n\t\t\tform.find( '.actions' ).before( '<p>' + fsize.parent().html() + '</p>' );\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t// display file size\r\n\tdisplayFileSize = function( input ) {\r\n\t\tinput.nextAll( '.fsize' ).remove();\r\n\t\tif ( input[ 0 ].files.length > 0 ) {\r\n\t\t\tvar filesize = input[ 0 ].files[ 0 ].size / 1024;\r\n\r\n\t\t\tif ( filesize >= 1024 ) {\r\n\t\t\t\tfilesize = filesize / 1024;\r\n\t\t\t\tinput.after( '<span class=\"fsize\">File size: ' + ( Math.round( filesize * 10 ) / 10 ) + 'MB' + '</span>' );\r\n\t\t\t} else {\r\n\t\t\t\tinput.after( '<span class=\"fsize\">File size: ' + ( Math.round( filesize * 10 ) / 10 ) + 'KB' + '</span>' );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// forms with max file size\r\n\t$( '.max-fsize' ).each(function() {\r\n\t\tvar fsize = $( this ),\r\n\t\t\tform,\r\n\t\t    maxFileSize\r\n\t\t;\r\n\r\n\t\t// read fsize, assume MB\r\n\t\tmaxFileSize = parseInt( fsize.text().replace( /\\D+/g, '' ), 10 ) * 1024 * 1024;\r\n\t\t// window.console.log( 'found max fsize', maxFileSize );\r\n\r\n\t\t// get form (closest form after the preamble)\r\n\t\tform = fsize.closest( '.preamble' ).nextAll( 'form' ).eq( 0 );\r\n\r\n\t\tform.find( ':file' ).on( 'change', function() {\r\n\t\t\tvar input = $( this );\r\n\r\n\t\t\tdisplayFileSize( input );\r\n\r\n\t\t\t// recalculate file sizes\r\n\t\t\tvar total = 0, valid;\r\n\t\t\t$( ':file', this.form ).each(function( index, element ) {\r\n\t\t\t\tvar size = element.files.length ? element.files[ 0 ].size : 0;\r\n\t\t\t\ttotal += size; // total = total + size;\r\n\t\t\t});\r\n\r\n\t\t\t// is everything valid or invalid?\r\n\t\t\tvalid = total <= maxFileSize;\r\n\r\n\t\t\t// window.console.info( 'file size validation:', total, '<', maxFileSize, total < maxFileSize );\r\n\r\n\t\t\t$( ':file', this.form )\r\n\t\t\t// update validity for :file inputs with values\r\n\t\t\t.filter(function() {\r\n\t\t\t\treturn !! this.value;\r\n\t\t\t})\r\n\t\t\t.each(function( index, element ) {\r\n\t\t\t\telement.setCustomValidity( valid ? '' : 'Attachments are too large' );\r\n\t\t\t})\r\n\t\t\t// blank :file inputs should not have a custom error\r\n\t\t\t.filter(function() {\r\n\t\t\t\treturn ! this.value;\r\n\t\t\t})\r\n\t\t\t.each(function( index, element ) {\r\n\t\t\t\telement.setCustomValidity( '' );\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n}( jQuery ));\r\n","(function( $ ) {\r\n\t'use strict';\r\n\r\n\tvar xorConstraintSubmitHandler = function( event ) {\r\n\t\t\t// has one of the required fields been answered?\r\n\t\t\tvar xorFields = event.data[ 0 ],\r\n\t\t\t\tvalidationMessage = event.data[ 1 ],\r\n\t\t\t\txorConstraintMet = xorFields.filter(function() {\r\n\t\t\t\t\treturn this.value.length > 1;\r\n\t\t\t\t}).length > 0\r\n\t\t\t;\r\n\r\n\t\t\txorFields.each(function() {\r\n\t\t\t\tthis.setCustomValidity(\r\n\t\t\t\t\txorConstraintMet ? '' : validationMessage\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\txorConstraintChangeHandler = function( event, validationUiRefreshOnly ) {\r\n\t\t\tif ( validationUiRefreshOnly === true ) {\r\n\t\t\t\t// pass through to other change handlers\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar xorFields = event.data[ 0 ];\r\n\r\n\t\t\t// constraint validity check\r\n\t\t\txorConstraintSubmitHandler( event );\r\n\r\n\t\t\t// trigger validation UI  on other fields?\r\n\t\t\tif ( event.type === 'change' ) {\r\n\t\t\t\txorFields.not( event.target ).triggerHandler( 'change', true );\r\n\t\t\t}\r\n\t\t}\r\n\t;\r\n\r\n\r\n\t// plugin\r\n\t$.fn.initXorConstraint = function( validationMessage ) {\r\n\t\t// custom validation for XOR options\r\n\t\tthis.closest( 'form' ).on( 'submit', [ this, validationMessage ], xorConstraintSubmitHandler );\r\n\t\tthis.on( 'change', [ this, validationMessage ], xorConstraintChangeHandler );\r\n\t};\r\n\r\n\r\n}( jQuery ));\r\n","/**\r\n * This file initialises forms\r\n  */\r\n(function( $ ) { /* start closure */\r\n\t'use strict';\r\n\r\n\r\n\tvar initValidation = function() {\r\n\t\twindow.initConstraintValidationAPI();\r\n\t\t$( 'form' ).formValidation( 'validate' );\r\n\t};\r\n\r\n\r\n\t// now: hookup form validation\r\n\tinitValidation();\r\n\r\n\t// document ready: hookup form validation\r\n\t$( initValidation );\r\n\r\n\r\n\t// instruction based relevance\r\n\tif ( $( '.relevance', 'form' ).length > 0 ) {\r\n\t\t$( 'form', '#content' ).relevance( 'instructions' );\r\n\t}\r\n\r\n\r\n}( jQuery )); /* end closure */\r\n","(function( $ ){\r\n\t'use strict';\r\n\r\n\r\n\t// extend jquery to 'toggle required'\r\n\t$.fn.toggleRequired = function( required ) {\r\n\t\treturn this.each(function() {\r\n\r\n\t\t\tvar controls = $( this.form.elements[ this.name ] ),\r\n\t\t\t\tquestion = $( this ).closest( '.questions > li' )\r\n\t\t\t;\r\n\r\n\t\t\tif ( required ) {\r\n\t\t\t\tif ( question.find( 'abbr[title=\"(required)\"]' ).length === 0 ) {\r\n\t\t\t\t\tquestion.find( '.label' ).after(\r\n\t\t\t\t\t\t// create ABBR shiv for IE6 \r\n\t\t\t\t\t\t$( document.createElement( 'abbr' ))\r\n\t\t\t\t\t\t\t.attr( 'title' , '(required)' )\r\n\t\t\t\t\t\t\t.text( '*' )\r\n\t\t\t\t\t\t\t.addClass( 'required' )\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tcontrols.attr( 'required', 'required' );\r\n\t\t\t} else {\r\n\t\t\t\tcontrols.removeAttr( 'required' );\r\n\t\t\t\tquestion.find( 'abbr[title=\"(required)\"]' ).remove();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\r\n}( jQuery ));\r\n","/*globals qg*/\r\n// globals\r\nvar qg = { oldIE: false }\r\nqg.date = (function() {\r\n\t'use strict';\r\n\r\n\r\n\tvar datePackage = {},\r\n\r\n\t\t// Public holiday dates for 2010-2014 (viewed 2012-09-28)\r\n\t\t// http://www.justice.qld.gov.au/fair-and-safe-work/industrial-relations/public-holidays/dates\r\n\t\tqldHolidays = {\r\n\t\t\t// 2010\r\n\t\t\t'2010-01-01' : 'New Year’s Day',\r\n\t\t\t'2010-01-26' : 'Australia Day',\r\n\t\t\t'2010-04-02' : 'Good Friday',\r\n\t\t\t'2010-04-03' : 'Easter Saturday',\r\n\t\t\t'2010-04-05' : 'Easter Monday',\r\n\t\t\t'2010-04-26' : 'Anzac Day',\r\n\t\t\t'2010-05-03' : 'Labour Day',\r\n\t\t\t'2010-06-14' : 'Queen’s Birthday',\r\n\t\t\t'2010-12-25' : 'Christmas Day',\r\n\t\t\t'2010-12-27' : 'Boxing Day',\r\n\t\t\t'2010-12-28' : 'Christmas Day holiday',\r\n\r\n\t\t\t// 2011\r\n\t\t\t'2011-01-01' : 'New Year’s Day',\r\n\t\t\t'2011-01-03' : 'New Year’s Day holiday',\r\n\t\t\t'2011-02-26' : 'Australia Day',\r\n\t\t\t'2011-04-22' : 'Good Friday',\r\n\t\t\t'2011-04-23' : 'Easter Saturday',\r\n\t\t\t'2011-04-25' : 'Anzac Day',\r\n\t\t\t'2011-04-26' : 'Easter Monday',\r\n\t\t\t'2011-05-02' : 'Labour Day',\r\n\t\t\t'2011-06-13' : 'Queen’s Birthday',\r\n\t\t\t'2011-12-25' : 'Christmas Day',\r\n\t\t\t'2011-12-26' : 'Boxing Day',\r\n\t\t\t'2011-12-27' : 'Christmas Day holiday',\r\n\r\n\t\t\t// 2012\r\n\t\t\t'2012-01-01' : 'New Year’s Day',\r\n\t\t\t'2012-01-02' : 'New Year’s Day holiday',\r\n\t\t\t'2012-02-26' : 'Australia Day',\r\n\t\t\t'2012-04-06' : 'Good Friday',\r\n\t\t\t'2012-04-07' : 'Easter Saturday',\r\n\t\t\t'2012-04-09' : 'Easter Monday',\r\n\t\t\t'2012-04-25' : 'Anzac Day',\r\n\t\t\t'2012-05-07' : 'Labour Day',\r\n\t\t\t'2012-06-11' : 'Queen’s Diamond Jubilee',\r\n\t\t\t'2012-10-01' : 'Queen’s Birthday',\r\n\t\t\t'2012-12-25' : 'Christmas Day',\r\n\t\t\t'2012-12-26' : 'Boxing Day',\r\n\r\n\t\t\t// 2013\r\n\t\t\t'2013-01-01' : 'New Year’s Day',\r\n\t\t\t'2013-01-28' : 'Australia Day holiday',\r\n\t\t\t'2013-03-29' : 'Good Friday',\r\n\t\t\t'2013-03-30' : 'Easter Saturday',\r\n\t\t\t'2013-04-01' : 'Easter Monday',\r\n\t\t\t'2013-04-25' : 'Anzac Day',\r\n\t\t\t'2013-06-10' : 'Queen’s Birthday',\r\n\t\t\t'2013-10-07' : 'Labour Day',\r\n\t\t\t'2013-12-25' : 'Christmas Day',\r\n\t\t\t'2013-12-26' : 'Boxing Day',\r\n\r\n\t\t\t// 2014\r\n\t\t\t'2014-01-01' : 'New Year’s Day',\r\n\t\t\t'2014-01-27' : 'Australia Day holiday',\r\n\t\t\t'2014-04-18' : 'Good Friday',\r\n\t\t\t'2014-04-19' : 'Easter Saturday',\r\n\t\t\t'2014-04-21' : 'Easter Monday',\r\n\t\t\t'2014-04-25' : 'Anzac Day',\r\n\t\t\t'2014-06-09' : 'Queen’s Birthday',\r\n\t\t\t'2014-10-06' : 'Labour Day',\r\n\t\t\t'2014-12-25' : 'Christmas Day',\r\n\t\t\t'2014-12-26' : 'Boxing Day',\r\n\r\n\t\t\t// 2015\r\n\t\t\t'2015-01-01' : 'New Year’s Day',\r\n\t\t\t'2015-01-26' : 'Australia Day holiday',\r\n\t\t\t'2015-04-03' : 'Good Friday',\r\n\t\t\t'2015-04-04' : 'Easter Saturday',\r\n\t\t\t'2015-04-06' : 'Easter Monday',\r\n\t\t\t'2015-04-25' : 'Anzac Day',\r\n\t\t\t'2015-06-08' : 'Queen’s Birthday',\r\n\t\t\t'2015-10-05' : 'Labour Day',\r\n\t\t\t'2015-12-25' : 'Christmas Day',\r\n\t\t\t'2015-12-26' : 'Boxing Day',\r\n\t\t\t'2015-12-28' : 'Boxing Day holiday',\r\n\r\n\t\t\t// 2016\r\n\t\t\t'2016-01-01' : 'New Year’s Day',\r\n\t\t\t'2016-01-26' : 'Australia Day holiday',\r\n\t\t\t'2016-03-25' : 'Good Friday',\r\n\t\t\t'2016-03-26' : 'Easter Saturday',\r\n\t\t\t'2016-03-28' : 'Easter Monday',\r\n\t\t\t'2016-04-25' : 'Anzac Day',\r\n\t\t\t'2016-06-13' : 'Queen’s Birthday',\r\n\t\t\t'2016-10-03' : 'Labour Day',\r\n\t\t\t'2016-12-25' : 'Christmas Day',\r\n\t\t\t'2016-12-27' : 'Christmas Day holiday',\r\n\t\t\t'2016-12-26' : 'Boxing Day',\r\n\r\n\t\t\t// 2017\r\n\t\t\t'2017-01-01' : 'New Year’s Day',\r\n\t\t\t'2017-01-02' : 'New Year’s Day holiday',\r\n\t\t\t'2017-01-26' : 'Australia Day holiday',\r\n\t\t\t'2017-04-14' : 'Good Friday',\r\n\t\t\t'2017-04-15' : 'Easter Saturday',\r\n\t\t\t'2017-04-17' : 'Easter Monday',\r\n\t\t\t'2017-04-25' : 'Anzac Day',\r\n\t\t\t'2017-06-12' : 'Queen’s Birthday',\r\n\t\t\t'2017-10-02' : 'Labour Day',\r\n\t\t\t'2017-12-25' : 'Christmas Day',\r\n\t\t\t'2017-12-26' : 'Boxing Day',\r\n\r\n\t\t\t// 2018\r\n\t\t\t'2018-01-01' : 'New Year’s Day',\r\n\t\t\t'2018-01-26' : 'Australia Day holiday',\r\n\t\t\t'2018-03-30' : 'Good Friday',\r\n\t\t\t'2018-03-31' : 'Easter Saturday',\r\n\t\t\t'2018-04-02' : 'Easter Monday',\r\n\t\t\t'2018-04-25' : 'Anzac Day',\r\n\t\t\t'2018-05-07' : 'Labour Day',\r\n\t\t\t'2018-10-01' : 'Queen’s Birthday',\r\n\t\t\t'2018-12-25' : 'Christmas Day',\r\n\t\t\t'2018-12-26' : 'Boxing Day'\r\n\t\t}\r\n\t;\r\n\r\n\r\n\t// is a public holiday\r\n\tdatePackage.isPublicHoliday = function( date ) {\r\n\t\tvar d = date.getDate(),\r\n\t\t\tm = date.getMonth() + 1,\r\n\t\t\ty = String( date.getFullYear() ),\r\n\t\t\tdateString = y + ( m < 10 ? '-0' : '-' ) + m + ( d < 10 ? '-0' : '-' ) + d\r\n\t\t;\r\n\r\n\t\t// return true, date is a public holiday\r\n\t\t// TODO, if not a state-wide public holiday and given a latlong, check if it is a show holiday\r\n\t\t// return false, date is not a public holiday\r\n\t\t// TODO\r\n\t\t// return undefined, it is not known if the date is a public holiday (beyond 2 years in the future?)\r\n\r\n\t\treturn !! qldHolidays[ dateString ];\r\n\t};\r\n\r\n\r\n\treturn datePackage;\r\n\r\n}());\r\n","(function( $ ){\r\n\t'use strict';\r\n\r\n\r\n\t// find any textareas with a word count\r\n\t$( '.hint' ).filter(function() {\r\n\t\treturn ( /Maximum:\\s+\\d+\\s+words/ ).test( $( this ).text() );\r\n\t}).each(function() {\r\n\t\tvar hint = $( this ),\r\n\t\t    max = parseInt( hint.text().replace( /Maximum:\\s+(\\d+)\\s+words/, '$1' ), 10 ),\r\n\t\t    textField = hint.closest( 'label' ).nextAll( 'textarea' ),\r\n\t\t    counter\r\n\t\t;\r\n\r\n\t\t// add counter\r\n\t\tcounter = $( '<span/>' ).generateId( 'word-count' );\r\n\t\t//eg. Maximum: 50 words (50 remaining)\r\n\t\thint.append( ' (', counter, ' remaining)' );\r\n\r\n\t\ttextField.simplyCountable({\r\n\t\t\tcounter: '#' + counter[ 0 ].id,\r\n\t\t\tcountType: 'words',\r\n\t\t\tcountDirection: 'down',\r\n\t\t\tmaxCount: max,\r\n\t\t\tonOverCount: function() {\r\n\t\t\t\ttextField[ 0 ].setCustomValidity( 'Too many words' );\r\n\t\t\t},\r\n\t\t\tonSafeCount: function() {\r\n\t\t\t\ttextField[ 0 ].setCustomValidity( '' );\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\r\n}( jQuery ));\r\n"],"sourceRoot":"src/assets/js/"}